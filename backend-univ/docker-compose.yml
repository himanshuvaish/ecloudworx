# version: '3.8'

# services:
#   db:
#     image: postgres:15
#     container_name: ecloudworx_db
#     env_file: .env
#     environment:
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_DB: ${DB_NAME}
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#       interval: 10s
#       retries: 5

#   api:
#     build:
#       context: ./api
#       dockerfile: Dockerfile
#     container_name: ecloudworx_api
#     env_file: ../.env
#     ports:
#       - "4000:4000"
#     depends_on:
#       db:
#         condition: service_healthy

# volumes:
#   db_data:
services:
  db:
    image: postgres:15
    container_name: ecloudworx_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: ecloudworx_api
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - PORT=${PORT}
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
